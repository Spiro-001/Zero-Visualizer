/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_circlePlay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/circlePlay */ \"./src/scripts/circlePlay.js\");\n/* harmony import */ var _scripts_mirrorbarPlay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/mirrorbarPlay */ \"./src/scripts/mirrorbarPlay.js\");\n/* harmony import */ var _scripts_barPlay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/barPlay */ \"./src/scripts/barPlay.js\");\n/* harmony import */ var _scripts_lightningPlay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/lightningPlay */ \"./src/scripts/lightningPlay.js\");\n/* harmony import */ var _scripts_heartPlay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/heartPlay */ \"./src/scripts/heartPlay.js\");\n\n\n\n\n\nlet stage = document.getElementById(\"canvas\");\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nlet ctx = stage.getContext('2d');\nwindow.pause = true;\nlet WIDTH = canvas.width;\nlet HEIGHT = canvas.height;\nlet sfile = document.getElementById(\"soundfile\");\nlet uploadSound = document.getElementById(\"uploadButton\");\nlet audio = document.getElementById(\"audio\");\nconst lightning = document.getElementById(\"lightning\");\nconst circle = document.getElementById(\"circle\");\n\n// lightningPlay(ctx, sfile, uploadSound, audio, WIDTH, HEIGHT);\n\nlet lowShel;\nlightning.addEventListener(\"click\", e => {\n  (0,_scripts_lightningPlay__WEBPACK_IMPORTED_MODULE_3__.lightningPlay)(ctx, sfile, uploadSound, audio, WIDTH, HEIGHT);\n});\ncircle.addEventListener(\"click\", e => {\n  (0,_scripts_circlePlay__WEBPACK_IMPORTED_MODULE_0__.circlePlay)(ctx, sfile, uploadSound, audio, WIDTH, HEIGHT);\n});\n\n// circlePlay();\n// mirrorbarPlay();\n// barPlay();\n// lightningPlay();\n// heartPlay();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ007QUFDWjtBQUNZO0FBQ1I7QUFFaEQsSUFBSUssS0FBSyxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxRQUFRLENBQUM7QUFDN0NDLE1BQU0sQ0FBQ0MsS0FBSyxHQUFHQyxNQUFNLENBQUNDLFVBQVU7QUFDaENILE1BQU0sQ0FBQ0ksTUFBTSxHQUFHRixNQUFNLENBQUNHLFdBQVc7QUFDbEMsSUFBSUMsR0FBRyxHQUFHVCxLQUFLLENBQUNVLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFFaENMLE1BQU0sQ0FBQ00sS0FBSyxHQUFHLElBQUk7QUFFbkIsSUFBSUMsS0FBSyxHQUFHVCxNQUFNLENBQUNDLEtBQUs7QUFDeEIsSUFBSVMsTUFBTSxHQUFHVixNQUFNLENBQUNJLE1BQU07QUFFMUIsSUFBSU8sS0FBSyxHQUFHYixRQUFRLENBQUNDLGNBQWMsQ0FBQyxXQUFXLENBQUM7QUFDaEQsSUFBSWEsV0FBVyxHQUFHZCxRQUFRLENBQUNDLGNBQWMsQ0FBQyxjQUFjLENBQUM7QUFDekQsSUFBSWMsS0FBSyxHQUFHZixRQUFRLENBQUNDLGNBQWMsQ0FBQyxPQUFPLENBQUM7QUFFNUMsTUFBTWUsU0FBUyxHQUFHaEIsUUFBUSxDQUFDQyxjQUFjLENBQUMsV0FBVyxDQUFDO0FBQ3RELE1BQU1nQixNQUFNLEdBQUdqQixRQUFRLENBQUNDLGNBQWMsQ0FBQyxRQUFRLENBQUM7O0FBRWhEOztBQUVBLElBQUlpQixPQUFPO0FBRVhGLFNBQVMsQ0FBQ0csZ0JBQWdCLENBQUMsT0FBTyxFQUFFQyxDQUFDLElBQUk7RUFDckN2QixxRUFBYSxDQUFDVyxHQUFHLEVBQUVLLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxLQUFLLEVBQUVKLEtBQUssRUFBRUMsTUFBTSxDQUFDO0FBQ2hFLENBQUMsQ0FBQztBQUVGSyxNQUFNLENBQUNFLGdCQUFnQixDQUFDLE9BQU8sRUFBRUMsQ0FBQyxJQUFJO0VBQ2xDMUIsK0RBQVUsQ0FBQ2MsR0FBRyxFQUFFSyxLQUFLLEVBQUVDLFdBQVcsRUFBRUMsS0FBSyxFQUFFSixLQUFLLEVBQUVDLE1BQU0sQ0FBQztBQUM3RCxDQUFDLENBQUM7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3plcm8tdmlzdWFsaXplci8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNpcmNsZVBsYXkgfSBmcm9tIFwiLi9zY3JpcHRzL2NpcmNsZVBsYXlcIjtcbmltcG9ydCB7IG1pcnJvcmJhclBsYXkgfSBmcm9tIFwiLi9zY3JpcHRzL21pcnJvcmJhclBsYXlcIjtcbmltcG9ydCB7IGJhclBsYXkgfSBmcm9tIFwiLi9zY3JpcHRzL2JhclBsYXlcIjtcbmltcG9ydCB7IGxpZ2h0bmluZ1BsYXkgfSBmcm9tIFwiLi9zY3JpcHRzL2xpZ2h0bmluZ1BsYXlcIjtcbmltcG9ydCB7IGhlYXJ0UGxheSB9IGZyb20gXCIuL3NjcmlwdHMvaGVhcnRQbGF5XCI7XG5cbmxldCBzdGFnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xuY2FudmFzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG5jYW52YXMuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xubGV0IGN0eCA9IHN0YWdlLmdldENvbnRleHQoJzJkJyk7XG5cbndpbmRvdy5wYXVzZSA9IHRydWU7XG5cbmxldCBXSURUSCA9IGNhbnZhcy53aWR0aDtcbmxldCBIRUlHSFQgPSBjYW52YXMuaGVpZ2h0O1xuXG5sZXQgc2ZpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvdW5kZmlsZVwiKTtcbmxldCB1cGxvYWRTb3VuZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXBsb2FkQnV0dG9uXCIpXG5sZXQgYXVkaW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImF1ZGlvXCIpOyBcblxuY29uc3QgbGlnaHRuaW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsaWdodG5pbmdcIilcbmNvbnN0IGNpcmNsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2lyY2xlXCIpXG5cbi8vIGxpZ2h0bmluZ1BsYXkoY3R4LCBzZmlsZSwgdXBsb2FkU291bmQsIGF1ZGlvLCBXSURUSCwgSEVJR0hUKTtcblxubGV0IGxvd1NoZWxcblxubGlnaHRuaW5nLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcbiAgICBsaWdodG5pbmdQbGF5KGN0eCwgc2ZpbGUsIHVwbG9hZFNvdW5kLCBhdWRpbywgV0lEVEgsIEhFSUdIVCk7XG59KTtcblxuY2lyY2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcbiAgICBjaXJjbGVQbGF5KGN0eCwgc2ZpbGUsIHVwbG9hZFNvdW5kLCBhdWRpbywgV0lEVEgsIEhFSUdIVClcbn0pO1xuXG4vLyBjaXJjbGVQbGF5KCk7XG4vLyBtaXJyb3JiYXJQbGF5KCk7XG4vLyBiYXJQbGF5KCk7XG4vLyBsaWdodG5pbmdQbGF5KCk7XG4vLyBoZWFydFBsYXkoKTsiXSwibmFtZXMiOlsiY2lyY2xlUGxheSIsIm1pcnJvcmJhclBsYXkiLCJiYXJQbGF5IiwibGlnaHRuaW5nUGxheSIsImhlYXJ0UGxheSIsInN0YWdlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNhbnZhcyIsIndpZHRoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImlubmVySGVpZ2h0IiwiY3R4IiwiZ2V0Q29udGV4dCIsInBhdXNlIiwiV0lEVEgiLCJIRUlHSFQiLCJzZmlsZSIsInVwbG9hZFNvdW5kIiwiYXVkaW8iLCJsaWdodG5pbmciLCJjaXJjbGUiLCJsb3dTaGVsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/barPlay.js":
/*!********************************!*\
  !*** ./src/scripts/barPlay.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"barPlay\": function() { return /* binding */ barPlay; }\n/* harmony export */ });\nconst barPlay = function () {\n  let sfile = document.getElementById(\"soundfile\");\n  let uploadSound = document.getElementById(\"uploadButton\");\n  let audio = document.getElementById(\"audio\");\n  uploadSound.addEventListener(\"click\", function () {\n    sfile.click();\n  });\n  sfile.onchange = function () {\n    let sfiles = this.files;\n    audio.src = URL.createObjectURL(sfiles[0]);\n    audio.load();\n    audio.play();\n    let audioContext = new AudioContext();\n    let src = audioContext.createMediaElementSource(audio);\n    let visualizer = audioContext.createAnalyser();\n    let stage = document.getElementById(\"canvas\");\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    let ctx = stage.getContext('2d');\n    src.connect(visualizer);\n    visualizer.connect(audioContext.destination);\n    visualizer.fftSize = 256; // Higher the more detail in data.\n\n    let bufferLength = visualizer.frequencyBinCount; // Half of fftSize represents the amount of data values\n\n    let dataArray = new Uint8Array(bufferLength);\n    let WIDTH = canvas.width;\n    let HEIGHT = canvas.height;\n    let barWidth = WIDTH / bufferLength * 2.5;\n    let barHeight;\n    let x = 0;\n    function renderVisualizer() {\n      requestAnimationFrame(renderVisualizer);\n      x = 0;\n      visualizer.getByteFrequencyData(dataArray);\n      ctx.fillStyle = \"#000\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n        ctx.fillStyle = `rgba(${47},${253},${255},${barHeight / 255})`;\n        ctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);\n        ctx.fillRect(x, HEIGHT - barHeight, barWidth, -1.5 * barHeight);\n        x += barWidth + 10; // GAP\n      }\n    }\n\n    audio.play();\n    renderVisualizer();\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3pEWixHQUFHLENBQUNrQixRQUFRLENBQUNMLENBQUMsRUFBR0gsTUFBTSxHQUFHRSxTQUFTLEVBQUVELFFBQVEsRUFBRSxDQUFDLEdBQUcsR0FBR0MsU0FBUyxDQUFDO1FBRWhFQyxDQUFDLElBQUlGLFFBQVEsR0FBRyxFQUFFLENBQUMsQ0FBQztNQUN4QjtJQUNKOztJQUNBbEMsS0FBSyxDQUFDVSxJQUFJLEVBQUU7SUFDWjJCLGdCQUFnQixFQUFFO0VBQ3RCLENBQUM7QUFDTCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vemVyby12aXN1YWxpemVyLy4vc3JjL3NjcmlwdHMvYmFyUGxheS5qcz8yOTI4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJhclBsYXkgPSBmdW5jdGlvbigpe1xuXG4gICAgbGV0IHNmaWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb3VuZGZpbGVcIik7XG4gICAgbGV0IHVwbG9hZFNvdW5kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1cGxvYWRCdXR0b25cIilcbiAgICBsZXQgYXVkaW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImF1ZGlvXCIpO1xuXG4gICAgdXBsb2FkU291bmQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCl7XG4gICAgICAgIHNmaWxlLmNsaWNrKCk7XG4gICAgfSk7XG4gIFxuICAgIHNmaWxlLm9uY2hhbmdlID0gZnVuY3Rpb24oKXtcbiAgICAgICAgbGV0IHNmaWxlcyA9IHRoaXMuZmlsZXM7XG4gICAgICAgIGF1ZGlvLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwoc2ZpbGVzWzBdKTtcbiAgICAgICAgYXVkaW8ubG9hZCgpO1xuICAgICAgICBhdWRpby5wbGF5KCk7XG4gICAgICAgIGxldCBhdWRpb0NvbnRleHQgPSBuZXcgQXVkaW9Db250ZXh0KCk7XG4gICAgICAgIGxldCBzcmMgPSBhdWRpb0NvbnRleHQuY3JlYXRlTWVkaWFFbGVtZW50U291cmNlKGF1ZGlvKTtcbiAgICAgICAgbGV0IHZpc3VhbGl6ZXIgPSBhdWRpb0NvbnRleHQuY3JlYXRlQW5hbHlzZXIoKTtcblxuICAgICAgICBsZXQgc3RhZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcbiAgICAgICAgY2FudmFzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgICAgIGNhbnZhcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgICAgIGxldCBjdHggPSBzdGFnZS5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICBzcmMuY29ubmVjdCh2aXN1YWxpemVyKTtcbiAgICAgICAgdmlzdWFsaXplci5jb25uZWN0KGF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgIHZpc3VhbGl6ZXIuZmZ0U2l6ZSA9IDI1NjsgLy8gSGlnaGVyIHRoZSBtb3JlIGRldGFpbCBpbiBkYXRhLlxuXG4gICAgICAgIGxldCBidWZmZXJMZW5ndGggPSB2aXN1YWxpemVyLmZyZXF1ZW5jeUJpbkNvdW50OyAvLyBIYWxmIG9mIGZmdFNpemUgcmVwcmVzZW50cyB0aGUgYW1vdW50IG9mIGRhdGEgdmFsdWVzXG5cbiAgICAgICAgbGV0IGRhdGFBcnJheSA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlckxlbmd0aCk7XG5cbiAgICAgICAgbGV0IFdJRFRIID0gY2FudmFzLndpZHRoO1xuICAgICAgICBsZXQgSEVJR0hUID0gY2FudmFzLmhlaWdodDtcblxuICAgICAgICBsZXQgYmFyV2lkdGggPSAoV0lEVEggLyBidWZmZXJMZW5ndGgpICogMi41O1xuICAgICAgICBsZXQgYmFySGVpZ2h0O1xuICAgICAgICBsZXQgeCA9IDA7XG5cbiAgICAgICAgZnVuY3Rpb24gcmVuZGVyVmlzdWFsaXplcigpe1xuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlclZpc3VhbGl6ZXIpO1xuICAgICAgICAgICAgeCA9IDA7XG4gICAgICAgICAgICB2aXN1YWxpemVyLmdldEJ5dGVGcmVxdWVuY3lEYXRhKGRhdGFBcnJheSk7XG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gXCIjMDAwXCI7XG4gICAgICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgV0lEVEgsIEhFSUdIVCk7XG5cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnVmZmVyTGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgIGJhckhlaWdodCA9IGRhdGFBcnJheVtpXTtcbiAgICAgICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gYHJnYmEoJHs0N30sJHsyNTN9LCR7MjU1fSwke2JhckhlaWdodCAvIDI1NX0pYDtcbiAgICAgICAgICAgICAgICBjdHguZmlsbFJlY3QoeCAsIEhFSUdIVCAtIGJhckhlaWdodCwgYmFyV2lkdGgsIGJhckhlaWdodCk7XG4gICAgICAgICAgICAgICAgY3R4LmZpbGxSZWN0KHggLCBIRUlHSFQgLSBiYXJIZWlnaHQsIGJhcldpZHRoLCAtMS41ICogYmFySGVpZ2h0KTtcblxuICAgICAgICAgICAgICAgIHggKz0gYmFyV2lkdGggKyAxMDsgLy8gR0FQXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYXVkaW8ucGxheSgpO1xuICAgICAgICByZW5kZXJWaXN1YWxpemVyKCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBiYXJQbGF5IH07Il0sIm5hbWVzIjpbImJhclBsYXkiLCJzZmlsZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ1cGxvYWRTb3VuZCIsImF1ZGlvIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsaWNrIiwib25jaGFuZ2UiLCJzZmlsZXMiLCJmaWxlcyIsInNyYyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImxvYWQiLCJwbGF5IiwiYXVkaW9Db250ZXh0IiwiQXVkaW9Db250ZXh0IiwiY3JlYXRlTWVkaWFFbGVtZW50U291cmNlIiwidmlzdWFsaXplciIsImNyZWF0ZUFuYWx5c2VyIiwic3RhZ2UiLCJjYW52YXMiLCJ3aWR0aCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsImN0eCIsImdldENvbnRleHQiLCJjb25uZWN0IiwiZGVzdGluYXRpb24iLCJmZnRTaXplIiwiYnVmZmVyTGVuZ3RoIiwiZnJlcXVlbmN5QmluQ291bnQiLCJkYXRhQXJyYXkiLCJVaW50OEFycmF5IiwiV0lEVEgiLCJIRUlHSFQiLCJiYXJXaWR0aCIsImJhckhlaWdodCIsIngiLCJyZW5kZXJWaXN1YWxpemVyIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZ2V0Qnl0ZUZyZXF1ZW5jeURhdGEiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/barPlay.js\n");

/***/ }),

/***/ "./src/scripts/circlePlay.js":
/*!***********************************!*\
  !*** ./src/scripts/circlePlay.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"circlePlay\": function() { return /* binding */ circlePlay; }\n/* harmony export */ });\nconst circlePlay = function (ctx, sfile, uploadSound, audio, WIDTH, HEIGHT) {\n  window.animseq = 1;\n  ctx.clearRect(0, 0, WIDTH, HEIGHT);\n  uploadSound.addEventListener(\"click\", function () {\n    sfile.click();\n  });\n  let audioContext = new AudioContext();\n  let src = audioContext.createMediaElementSource(audio);\n  let visualizer = audioContext.createAnalyser();\n  let lowShelf = audioContext.createBiquadFilter();\n  let highShelf = audioContext.createBiquadFilter();\n  let highPass = audioContext.createBiquadFilter();\n  let lowPass = audioContext.createBiquadFilter();\n  src.connect(visualizer);\n  src.connect(highShelf);\n  highShelf.connect(lowShelf);\n  lowShelf.connect(highPass);\n  highPass.connect(lowPass);\n  lowPass.connect(audioContext.destination);\n  highShelf.type = \"highshelf\";\n  highShelf.frequency.value = 2000;\n  highShelf.gain.value = -100;\n  lowShelf.type = \"lowshelf\";\n  lowShelf.frequency.value = 220;\n  lowShelf.gain.value = 100;\n  highPass.type = \"highpass\";\n  highPass.frequency.value = 800;\n  highPass.Q.value = 0.7;\n  lowPass.type = \"lowpass\";\n  lowPass.frequency.value = 100;\n  lowPass.Q.value = 12;\n  src.connect(visualizer);\n  visualizer.connect(audioContext.destination);\n  visualizer.fftSize = 512; // Higher the more detail in data.\n\n  let bufferLength = visualizer.frequencyBinCount; // Half of fftSize represents the amount of data values\n  let dataArray = new Uint8Array(bufferLength);\n  let barHeight = 0;\n  let EQ = 5; // THE AMOUNT OF IF STATEMENTS\n\n  sfile.onchange = function () {\n    let sfiles = this.files;\n    audio.src = URL.createObjectURL(sfiles[0]);\n    audio.load();\n    audio.play();\n    audioContext = new AudioContext();\n    src = audioContext.createMediaElementSource(audio);\n    visualizer = audioContext.createAnalyser();\n    src.connect(visualizer);\n    src.connect(highShelf);\n    highShelf.connect(lowShelf);\n    lowShelf.connect(highPass);\n    highPass.connect(lowPass);\n    lowPass.connect(audioContext.destination);\n    highShelf.type = \"highshelf\";\n    highShelf.frequency.value = 4700;\n    highShelf.gain.value = -100;\n    lowShelf.type = \"lowshelf\";\n    lowShelf.frequency.value = 220;\n    lowShelf.gain.value = 100;\n    highPass.type = \"highpass\";\n    highPass.frequency.value = 800;\n    highPass.Q.value = 0.7;\n    lowPass.type = \"lowpass\";\n    lowPass.frequency.value = 100;\n    lowPass.Q.value = 12;\n    src.connect(visualizer);\n    visualizer.connect(audioContext.destination);\n    visualizer.fftSize = 512; // Higher the more detail in data.\n\n    bufferLength = visualizer.frequencyBinCount; // Half of fftSize represents the amount of data values\n    dataArray = new Uint8Array(bufferLength);\n    barHeight = 0;\n    EQ = 5; // THE AMOUNT OF IF STATEMENTS\n    renderVisualizer();\n  };\n  function renderVisualizer() {\n    if (window.animseq === 1) {\n      ctx.clearRect(0, 0, WIDTH, HEIGHT);\n      visualizer.getByteFrequencyData(dataArray);\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n        ctx.beginPath();\n        if (i >= 0 && i < 3 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${0},${0})`; // SUBS\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 0 / EQ * Math.PI, 1 / EQ * Math.PI, false);\n        } else if (i >= 3 && i < 4 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${0},${0})`; // LOWS\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 1 / EQ * Math.PI, 2 / EQ * Math.PI, false);\n        } else if (i > 4 && i < 6 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${0},${255},${0})`; // MIDS\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 2 / EQ * Math.PI, 3 / EQ * Math.PI, false);\n        } else if (i >= 6 && i < 8 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${0},${0},${255})`; // HIGHS\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 3 / EQ * Math.PI, 4 / EQ * Math.PI, false);\n        } else if (i > 8 && i < 11 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${200},${50},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 4 / EQ * Math.PI, 5 / EQ * Math.PI, false);\n        } else if (\n        // MID TO HIGH\n        i >= 11 && i < 13 &&\n        // Frequency\n        barHeight > 195 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${0},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 5 / EQ * Math.PI, 6 / EQ * Math.PI, false);\n        } else if (\n        // CLAPS\n        i >= 13 && i < 19 &&\n        // Frequency\n        barHeight > 185 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${255},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 6 / EQ * Math.PI, 7 / EQ * Math.PI, false);\n        } else if (\n        // HIGH \n        i >= 19 && i < 25 &&\n        // Frequency\n        barHeight > 185 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${255},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 7 / EQ * Math.PI, 8 / EQ * Math.PI, false);\n        } else if (\n        // HIGH\n        i >= 25 && i < 35 &&\n        // Frequency\n        barHeight > 185 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${255},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 8 / EQ * Math.PI, 9 / EQ * Math.PI, false);\n        } else if (\n        // HIGH\n        i >= 35 && i < 50 &&\n        // Frequency\n        barHeight > 185 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${255},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 9 / EQ * Math.PI, 10 / EQ * Math.PI, false);\n        }\n        ctx.stroke();\n      }\n      ctx.beginPath();\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = `rgb(${255},${255},${255})`;\n      ctx.arc(canvas.width / 2, canvas.height / 2, 255, 0, 2 * Math.PI, false);\n      ctx.stroke();\n      requestAnimationFrame(renderVisualizer);\n    }\n  }\n  if (visualizer) {\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    renderVisualizer();\n    console.log(\"a\");\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/circlePlay.js\n");

/***/ }),

/***/ "./src/scripts/heartPlay.js":
/*!**********************************!*\
  !*** ./src/scripts/heartPlay.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"heartPlay\": function() { return /* binding */ heartPlay; }\n/* harmony export */ });\nconst heartPlay = function () {\n  let sfile = document.getElementById(\"soundfile\");\n  let uploadSound = document.getElementById(\"uploadButton\");\n  let audio = document.getElementById(\"audio\");\n  uploadSound.addEventListener(\"click\", function () {\n    sfile.click();\n  });\n  sfile.onchange = function () {\n    let sfiles = this.files;\n    audio.src = URL.createObjectURL(sfiles[0]);\n    audio.load();\n    audio.play();\n    let audioContext = new AudioContext();\n    let src = audioContext.createMediaElementSource(audio);\n    let visualizer = audioContext.createAnalyser();\n    let stage = document.getElementById(\"canvas\");\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    let ctx = stage.getContext('2d');\n    src.connect(visualizer);\n    visualizer.connect(audioContext.destination);\n    visualizer.fftSize = 1024; // Higher the more detail in data.\n\n    let bufferLength = visualizer.frequencyBinCount; // Half of fftSize represents the amount of data values\n\n    let dataArray = new Uint8Array(bufferLength);\n    let WIDTH = canvas.width;\n    let HEIGHT = canvas.height;\n    let barWidth = WIDTH / bufferLength * 2.5;\n    let barHeight;\n    let boxSize = 64;\n    let x = 0;\n    let y = 0;\n    let boxCount = 0;\n    let startRipple;\n    let howManyTimes = 0;\n    let tick = 0;\n    let heartArray = [96, 97, 100, 101, 123, 124, 125, 126, 127, 128, 129, 130, 151, 152, 153, 154, 155, 156, 157, 158, 180, 181, 182, 183, 184, 185, 209, 210, 211, 212, 238, 239];\n    function renderVisualizer() {\n      requestAnimationFrame(renderVisualizer);\n      x = 0;\n      y = 1;\n      boxCount = 1;\n      startRipple = 88;\n      visualizer.getByteFrequencyData(dataArray);\n      ctx.fillStyle = \"#000\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      for (let i = 0; i < bufferLength; i++) {\n        if (heartArray.includes(boxCount)) {\n          if (dataArray[3] < 200) barHeight = 0;else barHeight = dataArray[4];\n          ctx.fillStyle = `rgba(${255},${0},${0},${barHeight / 256})`;\n          ctx.fillRect(x, y, boxSize, boxSize);\n        } else {\n          // while(startRipple === undefined)\n          // {\n          //     startRipple = Math.floor(Math.random() * 449);\n          //     if (heartArray.includes(startRipple)) startRipple = undefined;\n          // }\n          if (tick === 0) {\n            ctx.fillStyle = `rgba(${255},${0},${0})`;\n            ctx.fillRect(startRipple % 28 * 69, (Math.floor(startRipple / 28) - howManyTimes) * 69, boxSize, boxSize); // UP\n            ctx.fillRect((startRipple % 28 + howManyTimes) * 69, Math.floor(startRipple / 28) * 69, boxSize, boxSize); // RIGHT\n            ctx.fillRect(startRipple % 28 * 69, (Math.floor(startRipple / 28) + howManyTimes) * 69, boxSize, boxSize); // DOWN\n            ctx.fillRect((startRipple % 28 - howManyTimes) * 69, Math.floor(startRipple / 28) * 69, boxSize, boxSize); // LEFT\n            ctx.fillStyle = `rgba(${0},${0},${0})`;\n            ctx.fillRect(startRipple % 28 * 69, (Math.floor(startRipple / 28) - (howManyTimes - 1)) * 69, boxSize, boxSize); // UP\n            ctx.fillRect((startRipple % 28 + howManyTimes - 1) * 69, Math.floor(startRipple / 28) * 69, boxSize, boxSize); // RIGHT\n            ctx.fillRect(startRipple % 28 * 69, (Math.floor(startRipple / 28) + howManyTimes - 1) * 69, boxSize, boxSize); // DOWN\n            ctx.fillRect((startRipple % 28 - (howManyTimes - 1)) * 69, Math.floor(startRipple / 28) * 69, boxSize, boxSize); // LEFT\n            howManyTimes += 1;\n            if (howManyTimes === 28) howManyTimes = 0;\n          }\n          tick += 1;\n        }\n        x += boxSize + 5; // GAP\n        boxCount += 1;\n        if (x > 1920) x = 0, y += boxSize + 5; // GAP and RESET X\n        if (tick === 1000) tick = 0;\n      }\n    }\n    audio.play();\n    renderVisualizer();\n  };\n};\n\n//7.5 W\n//4 H//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/heartPlay.js\n");

/***/ }),

/***/ "./src/scripts/lightningPlay.js":
/*!**************************************!*\
  !*** ./src/scripts/lightningPlay.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lightningPlay\": function() { return /* binding */ lightningPlay; }\n/* harmony export */ });\nconst lightningPlay = function (ctx, sfile, uploadSound, audio, WIDTH, HEIGHT) {\n  window.animseq = 2;\n  uploadSound.addEventListener(\"click\", function () {\n    sfile.click();\n  });\n  let audioContext = new AudioContext();\n  let src = audioContext.createMediaElementSource(audio);\n  let visualizer = audioContext.createAnalyser();\n  let lowShelf = audioContext.createBiquadFilter();\n  let highShelf = audioContext.createBiquadFilter();\n  let highPass = audioContext.createBiquadFilter();\n  let lowPass = audioContext.createBiquadFilter();\n  src.connect(visualizer);\n  src.connect(highShelf);\n  highShelf.connect(lowShelf);\n  lowShelf.connect(highPass);\n  highPass.connect(lowPass);\n  lowPass.connect(audioContext.destination);\n  highShelf.type = \"highshelf\";\n  highShelf.frequency.value = 2000;\n  highShelf.gain.value = -100;\n  lowShelf.type = \"lowshelf\";\n  lowShelf.frequency.value = 220;\n  lowShelf.gain.value = 100;\n  highPass.type = \"highpass\";\n  highPass.frequency.value = 800;\n  highPass.Q.value = 0.7;\n  lowPass.type = \"lowpass\";\n  lowPass.frequency.value = 100;\n  lowPass.Q.value = 12;\n  visualizer.connect(audioContext.destination);\n  visualizer.fftSize = 512; // Higher the more detail in data.\n\n  let bufferLength = visualizer.frequencyBinCount; // Half of fftSize represents the amount of data values\n  let dataArray = new Uint8Array(bufferLength);\n  let barHeight = 0;\n  let x = 0;\n  let EQ = 5;\n  sfile.onchange = function () {\n    let sfiles = this.files;\n    audio.src = URL.createObjectURL(sfiles[0]);\n    audio.load();\n    audio.play();\n    audioContext = new AudioContext();\n    src = audioContext.createMediaElementSource(audio);\n    visualizer = audioContext.createAnalyser();\n    src.connect(visualizer);\n    src.connect(highShelf);\n    highShelf.connect(lowShelf);\n    lowShelf.connect(highPass);\n    highPass.connect(lowPass);\n    lowPass.connect(audioContext.destination);\n    highShelf.type = \"highshelf\";\n    highShelf.frequency.value = 4700;\n    highShelf.gain.value = -100;\n    lowShelf.type = \"lowshelf\";\n    lowShelf.frequency.value = 220;\n    lowShelf.gain.value = 100;\n    highPass.type = \"highpass\";\n    highPass.frequency.value = 800;\n    highPass.Q.value = 0.7;\n    lowPass.type = \"lowpass\";\n    lowPass.frequency.value = 100;\n    lowPass.Q.value = 12;\n    visualizer.connect(audioContext.destination);\n    visualizer.fftSize = 512; // Higher the more detail in data.\n\n    bufferLength = visualizer.frequencyBinCount; // Half of fftSize represents the amount of data values\n\n    dataArray = new Uint8Array(bufferLength);\n    barHeight = 0;\n    x = 0;\n    EQ = 5; // THE AMOUNT OF IF STATEMENTS\n    renderVisualizer();\n  };\n  function renderVisualizer() {\n    if (window.animseq === 2) {\n      visualizer.getByteFrequencyData(dataArray);\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n        if (i >= 0 && i < 3 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 3;\n          ctx.strokeStyle = `rgb(${255},${0},${0})`; // SUBS\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 0 / EQ * Math.PI, 1 / EQ * Math.PI, false);\n        } else if (i >= 3 && i < 4 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${0},${0})`; // LOWS\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 1 / EQ * Math.PI, 2 / EQ * Math.PI, false);\n        } else if (i > 4 && i < 6 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = `rgb(${0},${255},${0})`; // MIDS\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 2 / EQ * Math.PI, 3 / EQ * Math.PI, false);\n        } else if (i >= 6 && i < 8 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${0},${0},${255})`; // HIGHS\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 3 / EQ * Math.PI, 4 / EQ * Math.PI, false);\n        } else if (i > 8 && i < 11 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 4;\n          ctx.strokeStyle = `rgb(${200},${50},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 4 / EQ * Math.PI, 5 / EQ * Math.PI, false);\n        } else if (\n        // MID TO HIGH\n        i >= 11 && i < 13 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${0},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 5 / EQ * Math.PI, 6 / EQ * Math.PI, false);\n        } else if (\n        // CLAPS\n        i >= 13 && i < 19 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${255},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 6 / EQ * Math.PI, 7 / EQ * Math.PI, false);\n        } else if (\n        // HIGH \n        i >= 19 && i < 25 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${255},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 7 / EQ * Math.PI, 8 / EQ * Math.PI, false);\n        } else if (\n        // HIGH\n        i >= 25 && i < 35 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = `rgb(${255},${255},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 8 / EQ * Math.PI, 9 / EQ * Math.PI, false);\n        } else if (\n        // HIGH\n        i >= 35 && i < 50 &&\n        // Frequency\n        barHeight > 150 * audio.volume // Noise Gate\n        ) {\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = `rgb(${255},${255},${255})`;\n          ctx.arc(canvas.width / 2, canvas.height / 2, 255 + barHeight, 9 / EQ * Math.PI, 10 / EQ * Math.PI, false);\n        }\n        x += 1;\n        ctx.stroke();\n        if (x % 64 === 0) {\n          ctx.beginPath();\n          ctx.stroke();\n        }\n      }\n      requestAnimationFrame(renderVisualizer);\n    }\n  }\n  if (visualizer) {\n    ctx.beginPath();\n    ctx.stroke();\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    renderVisualizer();\n    console.log(\"b\");\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLEdBQUcsQ0FBQztFQUNwQjtBQUVKLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96ZXJvLXZpc3VhbGl6ZXIvLi9zcmMvc2NyaXB0cy9saWdodG5pbmdQbGF5LmpzPzIzZjUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbGlnaHRuaW5nUGxheSA9IGZ1bmN0aW9uKGN0eCwgc2ZpbGUsIHVwbG9hZFNvdW5kLCBhdWRpbywgV0lEVEgsIEhFSUdIVCl7XG5cbiAgICB3aW5kb3cuYW5pbXNlcSA9IDI7XG5cbiAgICB1cGxvYWRTb3VuZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKXtcbiAgICAgICAgc2ZpbGUuY2xpY2soKTtcbiAgICB9KTtcblxuICAgIGxldCBhdWRpb0NvbnRleHQgPSBuZXcgQXVkaW9Db250ZXh0KCk7XG4gICAgbGV0IHNyYyA9IGF1ZGlvQ29udGV4dC5jcmVhdGVNZWRpYUVsZW1lbnRTb3VyY2UoYXVkaW8pO1xuICAgIGxldCB2aXN1YWxpemVyID0gYXVkaW9Db250ZXh0LmNyZWF0ZUFuYWx5c2VyKCk7XG5cbiAgICBsZXQgbG93U2hlbGYgPSBhdWRpb0NvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XG4gICAgbGV0IGhpZ2hTaGVsZiA9IGF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcbiAgICBsZXQgaGlnaFBhc3MgPSBhdWRpb0NvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XG4gICAgbGV0IGxvd1Bhc3MgPSBhdWRpb0NvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XG5cbiAgICBzcmMuY29ubmVjdCh2aXN1YWxpemVyKTtcbiAgICBzcmMuY29ubmVjdChoaWdoU2hlbGYpO1xuICAgIGhpZ2hTaGVsZi5jb25uZWN0KGxvd1NoZWxmKTtcbiAgICBsb3dTaGVsZi5jb25uZWN0KGhpZ2hQYXNzKTtcbiAgICBoaWdoUGFzcy5jb25uZWN0KGxvd1Bhc3MpO1xuICAgIGxvd1Bhc3MuY29ubmVjdChhdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuXG4gICAgaGlnaFNoZWxmLnR5cGUgPSBcImhpZ2hzaGVsZlwiO1xuICAgIGhpZ2hTaGVsZi5mcmVxdWVuY3kudmFsdWUgPSAyMDAwO1xuICAgIGhpZ2hTaGVsZi5nYWluLnZhbHVlID0gLTEwMDtcblxuICAgIGxvd1NoZWxmLnR5cGUgPSBcImxvd3NoZWxmXCI7XG4gICAgbG93U2hlbGYuZnJlcXVlbmN5LnZhbHVlID0gMjIwO1xuICAgIGxvd1NoZWxmLmdhaW4udmFsdWUgPSAxMDA7XG5cbiAgICBoaWdoUGFzcy50eXBlID0gXCJoaWdocGFzc1wiO1xuICAgIGhpZ2hQYXNzLmZyZXF1ZW5jeS52YWx1ZSA9IDgwMDtcbiAgICBoaWdoUGFzcy5RLnZhbHVlID0gMC43O1xuXG4gICAgbG93UGFzcy50eXBlID0gXCJsb3dwYXNzXCI7XG4gICAgbG93UGFzcy5mcmVxdWVuY3kudmFsdWUgPSAxMDA7XG4gICAgbG93UGFzcy5RLnZhbHVlID0gMTI7XG5cbiAgICB2aXN1YWxpemVyLmNvbm5lY3QoYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICB2aXN1YWxpemVyLmZmdFNpemUgPSA1MTI7IC8vIEhpZ2hlciB0aGUgbW9yZSBkZXRhaWwgaW4gZGF0YS5cblxuICAgIGxldCBidWZmZXJMZW5ndGggPSB2aXN1YWxpemVyLmZyZXF1ZW5jeUJpbkNvdW50OyAvLyBIYWxmIG9mIGZmdFNpemUgcmVwcmVzZW50cyB0aGUgYW1vdW50IG9mIGRhdGEgdmFsdWVzXG4gICAgbGV0IGRhdGFBcnJheSA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlckxlbmd0aCk7XG4gICAgbGV0IGJhckhlaWdodCA9IDA7XG4gICAgbGV0IHggPSAwO1xuICAgIGxldCBFUSA9IDU7XG5cbiAgICBzZmlsZS5vbmNoYW5nZSA9IGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgbGV0IHNmaWxlcyA9IHRoaXMuZmlsZXM7XG4gICAgICAgIGF1ZGlvLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwoc2ZpbGVzWzBdKTtcbiAgICAgICAgYXVkaW8ubG9hZCgpO1xuICAgICAgICBhdWRpby5wbGF5KCk7XG5cbiAgICAgICAgYXVkaW9Db250ZXh0ID0gbmV3IEF1ZGlvQ29udGV4dCgpO1xuICAgICAgICBzcmMgPSBhdWRpb0NvbnRleHQuY3JlYXRlTWVkaWFFbGVtZW50U291cmNlKGF1ZGlvKTtcbiAgICAgICAgdmlzdWFsaXplciA9IGF1ZGlvQ29udGV4dC5jcmVhdGVBbmFseXNlcigpO1xuXG4gICAgICAgIHNyYy5jb25uZWN0KHZpc3VhbGl6ZXIpO1xuICAgICAgICBzcmMuY29ubmVjdChoaWdoU2hlbGYpO1xuICAgICAgICBoaWdoU2hlbGYuY29ubmVjdChsb3dTaGVsZik7XG4gICAgICAgIGxvd1NoZWxmLmNvbm5lY3QoaGlnaFBhc3MpO1xuICAgICAgICBoaWdoUGFzcy5jb25uZWN0KGxvd1Bhc3MpO1xuICAgICAgICBsb3dQYXNzLmNvbm5lY3QoYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICBcbiAgICAgICAgaGlnaFNoZWxmLnR5cGUgPSBcImhpZ2hzaGVsZlwiO1xuICAgICAgICBoaWdoU2hlbGYuZnJlcXVlbmN5LnZhbHVlID0gNDcwMDtcbiAgICAgICAgaGlnaFNoZWxmLmdhaW4udmFsdWUgPSAtMTAwO1xuICAgIFxuICAgICAgICBsb3dTaGVsZi50eXBlID0gXCJsb3dzaGVsZlwiO1xuICAgICAgICBsb3dTaGVsZi5mcmVxdWVuY3kudmFsdWUgPSAyMjA7XG4gICAgICAgIGxvd1NoZWxmLmdhaW4udmFsdWUgPSAxMDA7XG4gICAgXG4gICAgICAgIGhpZ2hQYXNzLnR5cGUgPSBcImhpZ2hwYXNzXCI7XG4gICAgICAgIGhpZ2hQYXNzLmZyZXF1ZW5jeS52YWx1ZSA9IDgwMDtcbiAgICAgICAgaGlnaFBhc3MuUS52YWx1ZSA9IDAuNztcbiAgICBcbiAgICAgICAgbG93UGFzcy50eXBlID0gXCJsb3dwYXNzXCI7XG4gICAgICAgIGxvd1Bhc3MuZnJlcXVlbmN5LnZhbHVlID0gMTAwO1xuICAgICAgICBsb3dQYXNzLlEudmFsdWUgPSAxMjtcblxuICAgICAgICB2aXN1YWxpemVyLmNvbm5lY3QoYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgdmlzdWFsaXplci5mZnRTaXplID0gNTEyOyAvLyBIaWdoZXIgdGhlIG1vcmUgZGV0YWlsIGluIGRhdGEuXG5cbiAgICAgICAgYnVmZmVyTGVuZ3RoID0gdmlzdWFsaXplci5mcmVxdWVuY3lCaW5Db3VudDsgLy8gSGFsZiBvZiBmZnRTaXplIHJlcHJlc2VudHMgdGhlIGFtb3VudCBvZiBkYXRhIHZhbHVlc1xuXG4gICAgICAgIGRhdGFBcnJheSA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlckxlbmd0aCk7XG5cbiAgICAgICAgYmFySGVpZ2h0ID0gMDtcbiAgICAgICAgeCA9IDA7XG4gICAgICAgIEVRID0gNSAvLyBUSEUgQU1PVU5UIE9GIElGIFNUQVRFTUVOVFNcbiAgICAgICAgcmVuZGVyVmlzdWFsaXplcigpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlclZpc3VhbGl6ZXIoKXtcbiAgICAgICAgaWYgKHdpbmRvdy5hbmltc2VxID09PSAyKXtcbiAgICAgICAgICAgIHZpc3VhbGl6ZXIuZ2V0Qnl0ZUZyZXF1ZW5jeURhdGEoZGF0YUFycmF5KTtcbiAgICAgICAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCBXSURUSCwgSEVJR0hUKTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnVmZmVyTGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgIGJhckhlaWdodCA9IGRhdGFBcnJheVtpXTtcblxuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgKGkgPj0gMCAmJiBpIDwgMykgJiYgLy8gRnJlcXVlbmN5XG4gICAgICAgICAgICAgICAgICAgIGJhckhlaWdodCA+ICgxNTAgKiBhdWRpby52b2x1bWUpIC8vIE5vaXNlIEdhdGVcbiAgICAgICAgICAgICAgICAgICAgKSBcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAzO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBgcmdiKCR7MjU1fSwkezB9LCR7MH0pYDsgLy8gU1VCU1xuICAgICAgICAgICAgICAgICAgICBjdHguYXJjKGNhbnZhcy53aWR0aCAvIDIsIGNhbnZhcy5oZWlnaHQgLyAyLCAyNTUgKyBiYXJIZWlnaHQsICgwIC8gRVEpICogTWF0aC5QSSwgKDEgLyBFUSkgKiBNYXRoLlBJLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKFxuICAgICAgICAgICAgICAgICAgICAoaSA+PSAzICYmIGkgPCA0KSAmJiAvLyBGcmVxdWVuY3lcbiAgICAgICAgICAgICAgICAgICAgYmFySGVpZ2h0ID4gKDE1MCAqIGF1ZGlvLnZvbHVtZSkgLy8gTm9pc2UgR2F0ZVxuICAgICAgICAgICAgICAgICAgICApIFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDE7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGByZ2IoJHsyNTV9LCR7MH0sJHswfSlgOyAvLyBMT1dTXG4gICAgICAgICAgICAgICAgICAgIGN0eC5hcmMoY2FudmFzLndpZHRoIC8gMiwgY2FudmFzLmhlaWdodCAvIDIsIDI1NSArIGJhckhlaWdodCwgKDEgLyBFUSkgKiBNYXRoLlBJLCAoMiAvIEVRKSAqIE1hdGguUEksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoXG4gICAgICAgICAgICAgICAgICAgIChpID4gNCAmJiBpIDwgNikgJiYgLy8gRnJlcXVlbmN5XG4gICAgICAgICAgICAgICAgICAgIGJhckhlaWdodCA+ICgxNTAgKiBhdWRpby52b2x1bWUpIC8vIE5vaXNlIEdhdGVcbiAgICAgICAgICAgICAgICAgICAgKXtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGByZ2IoJHswfSwkezI1NX0sJHswfSlgOyAvLyBNSURTXG4gICAgICAgICAgICAgICAgICAgIGN0eC5hcmMoY2FudmFzLndpZHRoIC8gMiwgY2FudmFzLmhlaWdodCAvIDIsIDI1NSArIGJhckhlaWdodCwgKDIgLyBFUSkgKiBNYXRoLlBJLCAoMyAvIEVRKSAqIE1hdGguUEksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoXG4gICAgICAgICAgICAgICAgICAgIChpID49IDYgJiYgaSA8IDgpICYmIC8vIEZyZXF1ZW5jeVxuICAgICAgICAgICAgICAgICAgICBiYXJIZWlnaHQgPiAoMTUwICogYXVkaW8udm9sdW1lKSAvLyBOb2lzZSBHYXRlXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAxO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBgcmdiKCR7MH0sJHswfSwkezI1NX0pYDsgLy8gSElHSFNcbiAgICAgICAgICAgICAgICAgICAgY3R4LmFyYyhjYW52YXMud2lkdGggLyAyLCBjYW52YXMuaGVpZ2h0IC8gMiwgMjU1ICsgYmFySGVpZ2h0LCAoMyAvIEVRKSAqIE1hdGguUEksICg0IC8gRVEpICogTWF0aC5QSSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChcbiAgICAgICAgICAgICAgICAgICAgKGkgPiA4ICYmIGkgPCAxMSkgJiYgLy8gRnJlcXVlbmN5XG4gICAgICAgICAgICAgICAgICAgIGJhckhlaWdodCA+ICgxNTAgKiBhdWRpby52b2x1bWUpIC8vIE5vaXNlIEdhdGVcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDQ7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGByZ2IoJHsyMDB9LCR7NTB9LCR7MjU1fSlgO1xuICAgICAgICAgICAgICAgICAgICBjdHguYXJjKGNhbnZhcy53aWR0aCAvIDIsIGNhbnZhcy5oZWlnaHQgLyAyLCAyNTUgKyBiYXJIZWlnaHQsICg0IC8gRVEpICogTWF0aC5QSSwgKDUgLyBFUSkgKiBNYXRoLlBJLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCAvLyBNSUQgVE8gSElHSFxuICAgICAgICAgICAgICAgICAgICAoaSA+PSAxMSAmJiBpIDwgMTMpICYmIC8vIEZyZXF1ZW5jeVxuICAgICAgICAgICAgICAgICAgICBiYXJIZWlnaHQgPiAoMTUwICogYXVkaW8udm9sdW1lKSAvLyBOb2lzZSBHYXRlXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAxO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBgcmdiKCR7MjU1fSwkezB9LCR7MjU1fSlgO1xuICAgICAgICAgICAgICAgICAgICBjdHguYXJjKGNhbnZhcy53aWR0aCAvIDIsIGNhbnZhcy5oZWlnaHQgLyAyLCAyNTUgKyBiYXJIZWlnaHQsICg1IC8gRVEpICogTWF0aC5QSSwgKDYgLyBFUSkgKiBNYXRoLlBJLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCAvLyBDTEFQU1xuICAgICAgICAgICAgICAgICAgICAoaSA+PSAxMyAmJiBpIDwgMTkpICYmIC8vIEZyZXF1ZW5jeVxuICAgICAgICAgICAgICAgICAgICBiYXJIZWlnaHQgPiAoMTUwICogYXVkaW8udm9sdW1lKSAvLyBOb2lzZSBHYXRlXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAxO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBgcmdiKCR7MjU1fSwkezI1NX0sJHsyNTV9KWA7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5hcmMoY2FudmFzLndpZHRoIC8gMiwgY2FudmFzLmhlaWdodCAvIDIsIDI1NSArIGJhckhlaWdodCwgKDYgLyBFUSkgKiBNYXRoLlBJLCAoNyAvIEVRKSAqIE1hdGguUEksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoIC8vIEhJR0ggXG4gICAgICAgICAgICAgICAgICAgIChpID49IDE5ICYmIGkgPCAyNSkgJiYgLy8gRnJlcXVlbmN5XG4gICAgICAgICAgICAgICAgICAgIGJhckhlaWdodCA+ICgxNTAgKiBhdWRpby52b2x1bWUpIC8vIE5vaXNlIEdhdGVcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDE7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IGByZ2IoJHsyNTV9LCR7MjU1fSwkezI1NX0pYDtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmFyYyhjYW52YXMud2lkdGggLyAyLCBjYW52YXMuaGVpZ2h0IC8gMiwgMjU1ICsgYmFySGVpZ2h0LCAoNyAvIEVRKSAqIE1hdGguUEksICg4IC8gRVEpICogTWF0aC5QSSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICggLy8gSElHSFxuICAgICAgICAgICAgICAgICAgICAoaSA+PSAyNSAmJiBpIDwgMzUpICYmIC8vIEZyZXF1ZW5jeVxuICAgICAgICAgICAgICAgICAgICBiYXJIZWlnaHQgPiAoMTUwICogYXVkaW8udm9sdW1lKSAvLyBOb2lzZSBHYXRlXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAxO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBgcmdiKCR7MjU1fSwkezI1NX0sJHsyNTV9KWA7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5hcmMoY2FudmFzLndpZHRoIC8gMiwgY2FudmFzLmhlaWdodCAvIDIsIDI1NSArIGJhckhlaWdodCwgKDggLyBFUSkgKiBNYXRoLlBJLCAoOSAvIEVRKSAqIE1hdGguUEksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoIC8vIEhJR0hcbiAgICAgICAgICAgICAgICAgICAgKGkgPj0gMzUgJiYgaSA8IDUwKSAmJiAvLyBGcmVxdWVuY3lcbiAgICAgICAgICAgICAgICAgICAgYmFySGVpZ2h0ID4gKDE1MCAqIGF1ZGlvLnZvbHVtZSkgLy8gTm9pc2UgR2F0ZVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMjtcbiAgICAgICAgICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gYHJnYigkezI1NX0sJHsyNTV9LCR7MjU1fSlgO1xuICAgICAgICAgICAgICAgICAgICBjdHguYXJjKGNhbnZhcy53aWR0aCAvIDIsIGNhbnZhcy5oZWlnaHQgLyAyLCAyNTUgKyBiYXJIZWlnaHQsICg5IC8gRVEpICogTWF0aC5QSSwgKDEwIC8gRVEpICogTWF0aC5QSSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB4ICs9IDFcbiAgICAgICAgICAgICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICAgICAgICAgICAgaWYgKCh4ICUgNjQpID09PSAwKXtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlclZpc3VhbGl6ZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHZpc3VhbGl6ZXIpIHtcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICAgIGN0eC5jbGVhclJlY3QoMCwwLCBXSURUSCwgSEVJR0hUKTtcbiAgICAgICAgcmVuZGVyVmlzdWFsaXplcigpO1xuICAgICAgICBjb25zb2xlLmxvZyhcImJcIik7XG4gICAgfVxuXG59XG5cbmV4cG9ydCB7IGxpZ2h0bmluZ1BsYXkgfTsiXSwibmFtZXMiOlsibGlnaHRuaW5nUGxheSIsImN0eCIsInNmaWxlIiwidXBsb2FkU291bmQiLCJhdWRpbyIsIldJRFRIIiwiSEVJR0hUIiwid2luZG93IiwiYW5pbXNlcSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGljayIsImF1ZGlvQ29udGV4dCIsIkF1ZGlvQ29udGV4dCIsInNyYyIsImNyZWF0ZU1lZGlhRWxlbWVudFNvdXJjZSIsInZpc3VhbGl6ZXIiLCJjcmVhdGVBbmFseXNlciIsImxvd1NoZWxmIiwiY3JlYXRlQmlxdWFkRmlsdGVyIiwiaGlnaFNoZWxmIiwiaGlnaFBhc3MiLCJsb3dQYXNzIiwiY29ubmVjdCIsImRlc3RpbmF0aW9uIiwidHlwZSIsImZyZXF1ZW5jeSIsInZhbHVlIiwiZ2FpbiIsIlEiLCJmZnRTaXplIiwiYnVmZmVyTGVuZ3RoIiwiZnJlcXVlbmN5QmluQ291bnQiLCJkYXRhQXJyYXkiLCJVaW50OEFycmF5IiwiYmFySGVpZ2h0IiwieCIsIkVRIiwib25jaGFuZ2UiLCJzZmlsZXMiLCJmaWxlcyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImxvYWQiLCJwbGF5IiwicmVuZGVyVmlzdWFsaXplciIsImdldEJ5dGVGcmVxdWVuY3lEYXRhIiwiZmlsbFJlY3QiLCJpIiwidm9sdW1lIiwibGluZVdpZHRoIiwic3Ryb2tlU3R5bGUiLCJhcmMiLCJjYW52YXMiLCJ3aWR0aCIsImhlaWdodCIsIk1hdGgiLCJQSSIsInN0cm9rZSIsImJlZ2luUGF0aCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNsZWFyUmVjdCIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/lightningPlay.js\n");

/***/ }),

/***/ "./src/scripts/mirrorbarPlay.js":
/*!**************************************!*\
  !*** ./src/scripts/mirrorbarPlay.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mirrorbarPlay\": function() { return /* binding */ mirrorbarPlay; }\n/* harmony export */ });\nconst mirrorbarPlay = function () {\n  let sfile = document.getElementById(\"soundfile\");\n  let uploadSound = document.getElementById(\"uploadButton\");\n  let audio = document.getElementById(\"audio\");\n  uploadSound.addEventListener(\"click\", function () {\n    sfile.click();\n  });\n  sfile.onchange = function () {\n    let sfiles = this.files;\n    audio.src = URL.createObjectURL(sfiles[0]);\n    audio.load();\n    audio.play();\n    let audioContext = new AudioContext();\n    let src = audioContext.createMediaElementSource(audio);\n    let visualizer = audioContext.createAnalyser();\n    let stage = document.getElementById(\"canvas\");\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    let ctx = stage.getContext('2d');\n    src.connect(visualizer);\n    visualizer.connect(audioContext.destination);\n    visualizer.fftSize = 256; // Higher the more detail in data.\n\n    let bufferLength = visualizer.frequencyBinCount; // Half of fftSize represents the amount of data values\n\n    let dataArray = new Uint8Array(bufferLength);\n    let WIDTH = canvas.width;\n    let HEIGHT = canvas.height;\n    let barWidth = WIDTH / bufferLength;\n    let barHeight;\n    let x = 0;\n    function renderVisualizer() {\n      requestAnimationFrame(renderVisualizer);\n      x = 0;\n      visualizer.getByteFrequencyData(dataArray);\n      ctx.fillStyle = \"#000\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i];\n        ctx.fillStyle = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.random() * 1})`;\n        ctx.fillRect(x, HEIGHT / 2 - barHeight, barWidth, barHeight);\n        ctx.fillRect(x, HEIGHT / 2 - barHeight, barWidth, 2 * barHeight);\n        x += barWidth + 5; // GAP\n      }\n    }\n\n    audio.play();\n    renderVisualizer();\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFLLENBQUNELElBQUksQ0FBQ0UsTUFBTSxFQUFFLEdBQUcsR0FBRyxDQUFFLEtBQUtGLElBQUksQ0FBQ0UsTUFBTSxFQUFFLEdBQUcsQ0FBRyxHQUFFO1FBQzFKdEIsR0FBRyxDQUFDa0IsUUFBUSxDQUFDTCxDQUFDLEVBQUdILE1BQU0sR0FBRyxDQUFDLEdBQUdFLFNBQVMsRUFBRUQsUUFBUSxFQUFFQyxTQUFTLENBQUM7UUFDN0RaLEdBQUcsQ0FBQ2tCLFFBQVEsQ0FBQ0wsQ0FBQyxFQUFHSCxNQUFNLEdBQUcsQ0FBQyxHQUFHRSxTQUFTLEVBQUVELFFBQVEsRUFBRSxDQUFDLEdBQUdDLFNBQVMsQ0FBQztRQUNqRUMsQ0FBQyxJQUFJRixRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7TUFDdkI7SUFDSjs7SUFDQWxDLEtBQUssQ0FBQ1UsSUFBSSxFQUFFO0lBQ1oyQixnQkFBZ0IsRUFBRTtFQUN0QixDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3plcm8tdmlzdWFsaXplci8uL3NyYy9zY3JpcHRzL21pcnJvcmJhclBsYXkuanM/ZDk4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtaXJyb3JiYXJQbGF5ID0gZnVuY3Rpb24oKXtcblxuICAgIGxldCBzZmlsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic291bmRmaWxlXCIpO1xuICAgIGxldCB1cGxvYWRTb3VuZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXBsb2FkQnV0dG9uXCIpXG4gICAgbGV0IGF1ZGlvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhdWRpb1wiKTtcblxuICAgIHVwbG9hZFNvdW5kLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpe1xuICAgICAgICBzZmlsZS5jbGljaygpO1xuICAgIH0pO1xuICBcbiAgICBzZmlsZS5vbmNoYW5nZSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIGxldCBzZmlsZXMgPSB0aGlzLmZpbGVzO1xuICAgICAgICBhdWRpby5zcmMgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKHNmaWxlc1swXSk7XG4gICAgICAgIGF1ZGlvLmxvYWQoKTtcbiAgICAgICAgYXVkaW8ucGxheSgpO1xuICAgICAgICBsZXQgYXVkaW9Db250ZXh0ID0gbmV3IEF1ZGlvQ29udGV4dCgpO1xuICAgICAgICBsZXQgc3JjID0gYXVkaW9Db250ZXh0LmNyZWF0ZU1lZGlhRWxlbWVudFNvdXJjZShhdWRpbyk7XG4gICAgICAgIGxldCB2aXN1YWxpemVyID0gYXVkaW9Db250ZXh0LmNyZWF0ZUFuYWx5c2VyKCk7XG5cbiAgICAgICAgbGV0IHN0YWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XG4gICAgICAgIGNhbnZhcy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgICAgICBjYW52YXMuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgICBsZXQgY3R4ID0gc3RhZ2UuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgc3JjLmNvbm5lY3QodmlzdWFsaXplcik7XG4gICAgICAgIHZpc3VhbGl6ZXIuY29ubmVjdChhdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgICAgICB2aXN1YWxpemVyLmZmdFNpemUgPSAyNTY7IC8vIEhpZ2hlciB0aGUgbW9yZSBkZXRhaWwgaW4gZGF0YS5cblxuICAgICAgICBsZXQgYnVmZmVyTGVuZ3RoID0gdmlzdWFsaXplci5mcmVxdWVuY3lCaW5Db3VudDsgLy8gSGFsZiBvZiBmZnRTaXplIHJlcHJlc2VudHMgdGhlIGFtb3VudCBvZiBkYXRhIHZhbHVlc1xuXG4gICAgICAgIGxldCBkYXRhQXJyYXkgPSBuZXcgVWludDhBcnJheShidWZmZXJMZW5ndGgpO1xuXG4gICAgICAgIGxldCBXSURUSCA9IGNhbnZhcy53aWR0aDtcbiAgICAgICAgbGV0IEhFSUdIVCA9IGNhbnZhcy5oZWlnaHQ7XG5cbiAgICAgICAgbGV0IGJhcldpZHRoID0gKFdJRFRIIC8gYnVmZmVyTGVuZ3RoKTtcbiAgICAgICAgbGV0IGJhckhlaWdodDtcbiAgICAgICAgbGV0IHggPSAwO1xuXG4gICAgICAgIGZ1bmN0aW9uIHJlbmRlclZpc3VhbGl6ZXIoKXtcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXJWaXN1YWxpemVyKTtcbiAgICAgICAgICAgIHggPSAwO1xuICAgICAgICAgICAgdmlzdWFsaXplci5nZXRCeXRlRnJlcXVlbmN5RGF0YShkYXRhQXJyYXkpO1xuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiIzAwMFwiO1xuICAgICAgICAgICAgY3R4LmZpbGxSZWN0KDAsIDAsIFdJRFRILCBIRUlHSFQpO1xuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJ1ZmZlckxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICBiYXJIZWlnaHQgPSBkYXRhQXJyYXlbaV07XG4gICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGByZ2JhKCR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KX0sICR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KX0sICR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KX0sICR7KE1hdGgucmFuZG9tKCkgKiAxKX0pYDtcbiAgICAgICAgICAgICAgICBjdHguZmlsbFJlY3QoeCAsIEhFSUdIVCAvIDIgLSBiYXJIZWlnaHQsIGJhcldpZHRoLCBiYXJIZWlnaHQpO1xuICAgICAgICAgICAgICAgIGN0eC5maWxsUmVjdCh4ICwgSEVJR0hUIC8gMiAtIGJhckhlaWdodCwgYmFyV2lkdGgsIDIgKiBiYXJIZWlnaHQpO1xuICAgICAgICAgICAgICAgIHggKz0gYmFyV2lkdGggKyA1OyAvLyBHQVBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhdWRpby5wbGF5KCk7XG4gICAgICAgIHJlbmRlclZpc3VhbGl6ZXIoKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IG1pcnJvcmJhclBsYXkgfTsiXSwibmFtZXMiOlsibWlycm9yYmFyUGxheSIsInNmaWxlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInVwbG9hZFNvdW5kIiwiYXVkaW8iLCJhZGRFdmVudExpc3RlbmVyIiwiY2xpY2siLCJvbmNoYW5nZSIsInNmaWxlcyIsImZpbGVzIiwic3JjIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwibG9hZCIsInBsYXkiLCJhdWRpb0NvbnRleHQiLCJBdWRpb0NvbnRleHQiLCJjcmVhdGVNZWRpYUVsZW1lbnRTb3VyY2UiLCJ2aXN1YWxpemVyIiwiY3JlYXRlQW5hbHlzZXIiLCJzdGFnZSIsImNhbnZhcyIsIndpZHRoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImlubmVySGVpZ2h0IiwiY3R4IiwiZ2V0Q29udGV4dCIsImNvbm5lY3QiLCJkZXN0aW5hdGlvbiIsImZmdFNpemUiLCJidWZmZXJMZW5ndGgiLCJmcmVxdWVuY3lCaW5Db3VudCIsImRhdGFBcnJheSIsIlVpbnQ4QXJyYXkiLCJXSURUSCIsIkhFSUdIVCIsImJhcldpZHRoIiwiYmFySGVpZ2h0IiwieCIsInJlbmRlclZpc3VhbGl6ZXIiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJnZXRCeXRlRnJlcXVlbmN5RGF0YSIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiaSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/mirrorbarPlay.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96ZXJvLXZpc3VhbGl6ZXIvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;